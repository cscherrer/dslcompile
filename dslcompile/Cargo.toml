[package]
name = "dslcompile"
version.workspace = true
edition.workspace = true
description = "High-performance symbolic mathematics with final tagless design, egg optimization, and Rust hot-loading compilation"
license.workspace = true
repository.workspace = true
keywords = ["symbolic", "mathematics", "rust-codegen", "final-tagless", "optimization"]
categories = ["mathematics", "science", "compilers"]

[lints]
workspace = true

[dependencies]
# Core numeric traits for generic operations
num-traits = "0.2"

# Procedural macros for compile-time optimization
dslcompile-macros = { version = "0.0.1", path = "../dslcompile-macros" }

# Error handling
thiserror = "2.0.12"



# Serialization support
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# E-graph optimization with egg
egg = { version = "0.10.0", optional = true }

# Dynamic library loading for Rust codegen backend
dlopen2.workspace = true

# For performance comparisons
ad_trait = { workspace = true, optional = true }
ordered-float.workspace = true

# HList support for unified variadic functions
frunk = "0.4"

# LLVM JIT compilation backend  
inkwell = { version = "0.6.0", features = ["llvm18-1"], optional = true }

clap.workspace = true

rand.workspace = true


[features]
default = ["optimization", "math_ops"]
optimization = ["dep:egg"]
ad_trait = ["dep:ad_trait"]
llvm_jit = ["dep:inkwell"]
math_ops = []  # Mathematical operator overloading for DynamicExpr<T> where T: Scalar
all = ["optimization", "ad_trait", "llvm_jit", "math_ops"]
all-no-llvm = ["optimization", "ad_trait", "math_ops"]

# Legacy feature aliases for backward compatibility
symbolic = ["optimization"]
egg_optimization = ["optimization"]

[dev-dependencies]
criterion.workspace = true
divan.workspace = true
proptest.workspace = true

[[bench]]
name = "expression_optimization"
harness = false

[[bench]]
name = "simple_optimization"
harness = false







[[example]]
name = "multiset_demonstration"
path = "examples/multiset_demonstration.rs"

[[example]]
name = "enhanced_scoped_demo"
path = "examples/enhanced_scoped_demo.rs"

[[example]]
name = "llvm_jit_demo"
path = "examples/llvm_jit_demo.rs"
required-features = ["llvm_jit"]

[[example]]
name = "llvm_optimization_analysis"
path = "examples/llvm_optimization_analysis.rs"
required-features = ["llvm_jit"]

[[example]]
name = "llvm_random_data_benchmark"
path = "examples/llvm_random_data_benchmark.rs"
required-features = ["llvm_jit"]

 

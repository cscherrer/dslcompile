; Core Datatypes for DSLCompile Egglog Rules
; Defines the fundamental mathematical expression structure with cost models

; ========================================
; MATHEMATICAL EXPRESSION DATATYPE
; ========================================

(datatype Math
  ; Basic values
  (Num f64)           ; Numeric constants
  (UserVar i64)       ; User variables by registry index (VarRef::User)
  (BoundVar i64 :cost 1) ; Let-bound variables (for CSE)
  
  ; Binary arithmetic operations
  (Add Math Math :cost 1)     ; Addition
  (Sub Math Math :cost 1)     ; Subtraction (used in AST)
  (Mul Math Math :cost 1)     ; Multiplication
  (Div Math Math :cost 5)     ; Division
  (Pow Math Math :cost 10)    ; Exponentiation
  
  ; Unary operations
  (Neg Math :cost 1)          ; Negation
  (Ln Math :cost 30)          ; Natural logarithm
  (Exp Math :cost 40)         ; Exponential function
  (Sin Math :cost 75)         ; Sine
  (Cos Math :cost 75)         ; Cosine
  (Sqrt Math :cost 8)         ; Square root
  
  ; Let bindings for CSE
  (Let i64 Math Math :cost 1) ; Let binding: let <bound_id> = expr1 in expr2
)

; ========================================
; COLLECTION AND LAMBDA TYPES
; ========================================
; For summation support

; Collection types for summation
(datatype Collection
  (Empty)
  (Singleton Math)
  (Range Math Math)
  (DataArray i64)
)

; Lambda expressions for mapping
(datatype Lambda
  (LambdaFunc i64 Math)
  (Identity)
  (ConstantFunc Math)
)

; Cross-datatype constructors
(constructor Sum (Collection) Math)
(constructor Map (Lambda Collection) Collection)

; ========================================
; NOTE: REWRITE RULES
; ========================================
; Basic rewrite rules are defined in staged_core_math.egg
; This file focuses on datatype definitions only 
; Quick test to verify egglog is working
; Tests constant folding with associativity/commutativity

; Test data
(let test1 (Add (Num 2.0) (Num 3.0)))
(let test2 (Add (Mul (Num 2.0) (UserVar 0)) (Mul (Num 3.0) (UserVar 0))))
(let test3 (Mul (Num 2.0) (Add (Num 3.0) (Num 4.0))))

; Division simplification test: the critical test from comprehensive_iid_gaussian_demo
; This tests (x*x + 2*x) / x → x + 2 which would be a major speedup
(let test4 (Div (Add (Mul (UserVar 0) (UserVar 0)) (Mul (Num 2.0) (UserVar 0))) (UserVar 0)))

(run 5)

; ========================================
; VERIFICATION CHECKS
; ========================================

; Basic constant folding
(check (= test1 (Num 5.0)))  

; Coefficient collection: 2*x + 3*x = 5*x
(check (= test2 (Mul (Num 5.0) (UserVar 0))))

; Basic division simplification 
(check (= test4 (Add (UserVar 0) (Num 2.0))))  ; The key test: (x*x + 2*x) / x → x + 2

(run 1)
(check (= test3 (Num 14.0)))

; Disable output
(query (+ test1 0))
(query (+ test2 0))
(query (+ test3 0))
(query (+ test4 0)) 
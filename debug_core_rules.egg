; Test core datatypes and basic math rules only

; Load core datatypes
(datatype Math
  (Num f64)
  (UserVar i64)
  (Add Math Math)
  (Mul Math Math)
  (Sub Math Math)
  (Div Math Math)
  (Pow Math Math)
  (Neg Math)
  (Ln Math)
  (Exp Math)
  (Sin Math)
  (Cos Math)
  (Sqrt Math)
  (Let i64 Math Math)
)

; Basic identity rules
(rewrite (Add (Num 0.0) ?x) ?x)
(rewrite (Add ?x (Num 0.0)) ?x)
(rewrite (Mul (Num 1.0) ?x) ?x)
(rewrite (Mul ?x (Num 1.0)) ?x)

; Test expression: x + 0.0
(let test_expr (Add (UserVar 0) (Num 0.0)))

; Try to run
(run-schedule (saturate (run)))

; Query the result
(query-extract test_expr)
; Summation Rules for DSLCompile
; Summation linearity and algebraic manipulation rules

; ========================================
; SUMMATION LINEARITY RULES
; ========================================

; Linearity of summation over addition: Σ(x + y) = Σx + Σy
(rewrite (Sum ?i (Add ?x ?y)) (Add (Sum ?i ?x) (Sum ?i ?y)))

; Linearity of summation over subtraction: Σ(x - y) = Σx - Σy
(rewrite (Sum ?i (Sub ?x ?y)) (Sub (Sum ?i ?x) (Sum ?i ?y)))

; Constant factor rule: Σ(c * x) = c * Σx
(rewrite (Sum ?i (Mul (Num ?c) ?x)) (Mul (Num ?c) (Sum ?i ?x)))

; Summation of constant: Σc = n * c (where n is the number of terms)
(rewrite (Sum ?i (Num ?c)) (Mul (Var "n") (Num ?c)))

; ========================================
; DISTRIBUTIVE PROPERTIES FOR SUMMATIONS
; ========================================

; Factor out constants from summation
(rewrite (Mul (Num ?c) (Sum ?i ?x)) (Sum ?i (Mul (Num ?c) ?x)))

; Distribute summation over multiplication (when one factor is independent of index)
; Note: This requires careful handling to ensure mathematical correctness

; ========================================
; TELESCOPING SERIES PATTERNS
; ========================================

; Basic telescoping pattern recognition
; These would be expanded in a full implementation to handle
; more sophisticated telescoping series detection

; ========================================
; POWER SERIES EXPANSIONS
; ========================================

; Common power series that can be recognized and simplified
; These are mathematical identities that can help with summation optimization

; Geometric series: Σ(r^i) for |r| < 1
; Arithmetic series: Σ(a + bi) = na + b*Σi
; Power series: Σ(i^k) for various values of k

; ========================================
; SUMMATION INTERCHANGE RULES
; ========================================

; Rules for changing the order of summation in double sums
; These require careful mathematical validation

; ========================================
; FINITE SUMMATION FORMULAS
; ========================================

; Well-known finite summation formulas that can be applied
; when the summation bounds and pattern are recognized

; Sum of first n natural numbers: Σ(i=1 to n) i = n(n+1)/2
; Sum of first n squares: Σ(i=1 to n) i² = n(n+1)(2n+1)/6
; Sum of first n cubes: Σ(i=1 to n) i³ = [n(n+1)/2]²

; These would be implemented as more sophisticated pattern matching
; rules in a complete system 